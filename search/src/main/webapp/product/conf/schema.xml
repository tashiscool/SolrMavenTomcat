<?xml version="1.0" ?>

<schema name="Product" version="1.2">
    <types>
        <fieldType name="long" class="solr.TrieLongField" precisionStep="0" sortMissingLast="true" positionIncrementGap="0"/>
        <fieldType name="string" class="solr.StrField"
            sortMissingLast="true" omitNorms="true" />

        <!-- a text field that splits on whitespace, removes stopwords, and converts 
            to lowercase offers mixed-case matching (string fields to not) offers better 
            support for wildcard matching than string or text fields good for names and 
            titles that don't require more advanced analysis, or other fields that need 
            to support mixed-case matches -->
        <fieldType name="text_simple" class="solr.TextField"
            positionIncrementGap="100">
            <analyzer type="index">
                <tokenizer class="solr.WhitespaceTokenizerFactory" />
                <filter class="solr.StopFilterFactory" ignoreCase="true"
                    words="stopwords.txt" enablePositionIncrements="true" />
                <filter class="solr.LowerCaseFilterFactory" />
            </analyzer>
        </fieldType>

        <fieldtype name="date" class="solr.DateField"
            sortMissingLast="true" omitNorms="true" />
        
        <!-- a text field with minimal analysis, to help better support wildcard 
            matching -->
        <fieldType name="text_lc" class="solr.TextField"
            positionIncrementGap="100">
            <analyzer type="index">
                <tokenizer class="solr.WhitespaceTokenizerFactory" />
                <filter class="solr.LowerCaseFilterFactory" />
            </analyzer>
        </fieldType>
		<!-- a text field with minimal analysis, to help better support wildcard 
            matching -->
        <fieldType name="text_l" class="solr.TextField"
            positionIncrementGap="100">
            <analyzer type="index">
			    <tokenizer class="solr.KeywordTokenizerFactory" />
                <filter class="solr.LowerCaseFilterFactory" />
            </analyzer>
        </fieldType>

        <!-- A text field that uses WordDelimiterFilter to enable splitting and 
            matching of words on case-change, alpha numeric boundaries, and non-alphanumeric 
            chars, so that a query of "wifi" or "wi fi" could match a document containing 
            "Wi-Fi". Synonyms and stopwords are customized by external files, and stemming 
            is enabled. -->
        <fieldType name="texter" class="solr.TextField"
            positionIncrementGap="100">
            <analyzer type="index">
                <tokenizer class="solr.WhitespaceTokenizerFactory" />
                <!-- in this example, we will only use synonyms at query time <filter 
                    class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" 
                    expand="false"/> -->
                <!-- Case insensitive stop word removal. add enablePositionIncrements=true 
                    in both the index and query analyzers to leave a 'gap' for more accurate 
                    phrase queries. -->
                <filter class="solr.StopFilterFactory" ignoreCase="true"
                    words="stopwords.txt" enablePositionIncrements="true" />
                <filter class="solr.WordDelimiterFilterFactory"
                    generateWordParts="1" generateNumberParts="1" catenateWords="1"
                    catenateNumbers="1" catenateAll="0" splitOnCaseChange="1" />
                <filter class="solr.LowerCaseFilterFactory" />
                <filter class="solr.SnowballPorterFilterFactory" language="English"
                    protected="protwords.txt" />
            </analyzer>
            <analyzer type="query">
                <tokenizer class="solr.WhitespaceTokenizerFactory" />
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt"
                    ignoreCase="true" expand="true" />
                <filter class="solr.StopFilterFactory" ignoreCase="true"
                    words="stopwords.txt" enablePositionIncrements="true" />
                <filter class="solr.WordDelimiterFilterFactory"
                    generateWordParts="1" generateNumberParts="1" catenateWords="0"
                    catenateNumbers="0" catenateAll="0" splitOnCaseChange="1" />
                <filter class="solr.LowerCaseFilterFactory" />
                <filter class="solr.SnowballPorterFilterFactory" language="English"
                    protected="protwords.txt" />
            </analyzer>
        </fieldType>

        <fieldType name="ngram_front" class="solr.TextField"
            positionIncrementGap="100">
            <analyzer type="index">
                <tokenizer class="solr.WhitespaceTokenizerFactory" />
                <filter class="solr.LowerCaseFilterFactory" />
                <filter class="solr.EdgeNGramFilterFactory" side="front"
                    minGramSize="1" maxGramSize="50" />
            </analyzer>
            <analyzer type="query">
                <tokenizer class="solr.WhitespaceTokenizerFactory" />
                <filter class="solr.LowerCaseFilterFactory" />
            </analyzer>
        </fieldType>
    </types>

    <fields>
        <field name="_version_" type="long" indexed="true" stored="true" multiValued="false"/>
        <!-- Core Product Data -->
        <field name="plan_id" type="string" stored="true" multiValued="false" required="true" />
        <field name="power_source" type="string" stored="true" multiValued="false" required="false" />
        <field name="product_id" type="text_lc" stored="true" multiValued="false" />
        <field name="item_name" type="text_lc" stored="true" multiValued="false" />
        <field name="friendly_desc" type="text_lc" stored="true" multiValued="false" />
        <field name="categories" type="text_lc" stored="true" multiValued="false" />
        <field name="cat_segment3" type="text_lc" stored="true" multiValued="false" />
        <field name="segment4" type="text_lc" indexed="true" stored="true" multiValued="false" /> <!-- Brand -->
        <field name="default_power_source" type="text_lc"  stored="true" multiValued="false" />
        <field name="prod_size" type="text_lc" stored="true" multiValued="false" />
        <field name="portal_id" type="text_lc" stored="true" multiValued="false" />
        <field name="client_id" type="text_lc" stored="true" multiValued="false" />
        <field name="image_link" type="text_lc" stored="true" multiValued="false" />
        <field name="category_id" type="text_lc" stored="true" multiValued="false" />
        
        <field name="DisplayNameSuggest" type="ngram_front" indexed="true" stored="false" multiValued="true" />
        <field name="DisplayName_lc" type="text_lc" indexed="true" stored="false" multiValued="true" />
        <field name="AggregatedCategory" type="ngram_front" indexed="true" stored="true" multiValued="true" />
        <field name="seg4_brand" type="text_l" indexed="true" stored="true" multiValued="false" /> <!-- Brand -->
    </fields>

    <!-- field to use to determine and enforce document uniqueness. -->

    <!-- field for the QueryParser to use when an explicit fieldname is absent -->
    <defaultSearchField>DisplayNameSuggest</defaultSearchField>

    <!-- SolrQueryParser configuration: defaultOperator="AND|OR" -->
    <solrQueryParser defaultOperator="OR" />

    <copyField source="friendly_desc" dest="DisplayName_lc" />
    <copyField source="item_name" dest="DisplayName_lc" />
    
    <copyField source="friendly_desc" dest="DisplayNameSuggest" />
    <copyField source="item_name" dest="DisplayNameSuggest" />

    <copyField source="categories" dest="AggregatedCategory" />
    <copyField source="cat_segment3" dest="AggregatedCategory" />
    <copyField source="segment4" dest="AggregatedCategory" />
    <copyField source="segment4" dest="seg4_brand" />
    <copyField source="default_power_source" dest="AggregatedCategory" />
    <copyField source="power_source" dest="AggregatedCategory" />
    <copyField source="prod_size" dest="AggregatedCategory" />
</schema>
